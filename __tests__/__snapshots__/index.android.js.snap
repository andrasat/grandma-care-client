// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders AddFriend snapshot 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "height": 1334,
    }
  }
  virtual={undefined}
>
  <View>
    <View
      style={
        Object {
          "backgroundColor": "#F8F8F8",
          "borderBottomColor": "#a7a6ab",
          "borderBottomWidth": 0.5,
          "elevation": 3,
          "flexDirection": "row",
          "height": 64,
          "justifyContent": "center",
          "left": 0,
          "paddingLeft": 10,
          "paddingRight": 10,
          "paddingTop": 15,
          "right": 0,
          "top": 0,
        }
      }
      virtual={undefined}
    >
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "alignSelf": "center",
            "flex": 1,
          }
        }
        virtual={undefined}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          isTVSelectable={true}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": null,
              "backgroundColor": null,
              "borderBottomWidth": null,
              "borderColor": null,
              "borderLeftWidth": null,
              "borderRadius": 5,
              "borderRightWidth": null,
              "borderTopWidth": null,
              "elevation": 0,
              "flexDirection": "row",
              "height": 45,
              "justifyContent": "space-between",
              "marginLeft": -3,
              "opacity": 1,
              "paddingBottom": 6,
              "paddingLeft": 6,
              "paddingRight": 6,
              "paddingTop": 6,
              "shadowColor": null,
              "shadowOffset": null,
              "shadowOpacity": null,
              "shadowRadius": null,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#FFF",
                  "fontSize": 12,
                },
                Object {
                  "color": "#f4f4f4",
                  "fontSize": 33,
                  "marginLeft": 0,
                  "marginRight": 10,
                  "marginTop": 2,
                  "paddingTop": 2,
                },
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
            virtual={undefined}
          >
            Ôèè
          </Text>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#f4f4f4",
                "fontFamily": "System",
                "fontSize": 17,
                "lineHeight": 19,
                "marginLeft": 0,
                "marginRight": 0,
              }
            }
            virtual={undefined}
          >
            Back
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutoAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    keyboardDismissMode="interactive"
    onScroll={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={0}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
      }
    }
    virtual={undefined}
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
            "marginTop": "45%",
          }
        }
      >
        <View
          style={
            Object {
              "width": "90%",
            }
          }
          virtual={undefined}
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderBottomWidth": 1,
                "borderColor": "#D9D5DC",
                "borderLeftWidth": 0,
                "borderRightWidth": 0,
                "borderTopWidth": 0,
                "flexDirection": "row",
                "marginLeft": 15,
                "marginTop": 15,
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Object {
                  "left": 0,
                  "opacity": 1,
                  "paddingBottom": undefined,
                  "paddingTop": undefined,
                  "position": "absolute",
                  "right": 0,
                  "top": 18,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#575757",
                    "fontSize": 17,
                    "left": 0,
                    "paddingRight": 5,
                    "top": 8,
                  }
                }
                virtual={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "fontSize": 17,
                    }
                  }
                  virtual={undefined}
                >
                  Friend ID
                </Text>
              </Text>
            </View>
            <TextInput
              autoCapitalize="none"
              autoCorrect={false}
              editable={true}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholderTextColor="#575757"
              style={
                Object {
                  "color": "#000",
                  "flex": 1,
                  "fontSize": 17,
                  "height": 60,
                  "lineHeight": 24,
                  "paddingLeft": null,
                  "paddingRight": 5,
                  "top": 10,
                }
              }
              underlineColorAndroid="rgba(0,0,0,0)"
              value=""
              virtual={undefined}
            />
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderBottomWidth": 1,
                "borderColor": "transparent",
                "borderLeftWidth": 0,
                "borderRightWidth": 0,
                "borderTopWidth": 0,
                "flexDirection": "row",
                "marginLeft": 0,
                "marginTop": 20,
                "opacity": 1,
                "paddingLeft": 15,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              hitSlop={undefined}
              isTVSelectable={true}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "backgroundColor": "transparent",
                  "borderBottomWidth": 1,
                  "borderColor": "#007aff",
                  "borderLeftWidth": 1,
                  "borderRadius": 5,
                  "borderRightWidth": 1,
                  "borderTopWidth": 1,
                  "borderWidth": 1,
                  "elevation": null,
                  "flexDirection": "row",
                  "height": 45,
                  "justifyContent": "space-between",
                  "opacity": 1,
                  "paddingBottom": 6,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 6,
                  "shadowColor": null,
                  "shadowOffset": null,
                  "shadowOpacity": null,
                  "shadowRadius": null,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <Text
                accessible={true}
                allowFontScaling={false}
                android="md-add"
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "color": "#292988",
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#007aff",
                      "fontSize": 24,
                      "marginLeft": 5,
                      "marginRight": 5,
                      "paddingTop": 2,
                    },
                    Object {
                      "fontFamily": "Ionicons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                  ]
                }
                virtual={undefined}
              >
                ÔÑÇ
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    supportedOrientations={null}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-start",
          "margin": 20,
        }
      }
    >
      <View
        danger={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0,0,0,0.8)",
            "borderRadius": 5,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "minHeight": 50,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          }
        }
        success={false}
        virtual={undefined}
        warning={false}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#fff",
              "flex": 1,
              "fontFamily": "System",
              "fontSize": 16,
            }
          }
          virtual={undefined}
        />
      </View>
    </View>
  </Modal>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0.4)",
          "flex": 1,
          "justifyContent": "flex-end",
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        isTVSelectable={true}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#fff",
            "elevation": 4,
            "height": NaN,
            "opacity": 1,
            "padding": 15,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#757575",
              "fontFamily": "System",
              "fontSize": 16,
            }
          }
          virtual={undefined}
        />
        <RCTScrollView
          dataArray={Array []}
          dataSource={
            ListViewDataSource {
              "items": 0,
            }
          }
          enableEmptySections={true}
          renderRow={[Function]}
          renderScrollComponent={[Function]}
          style={
            Object {
              "marginHorizontal": -15,
              "marginTop": 15,
            }
          }
          virtual={undefined}
        >
          <View />
        </RCTScrollView>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`renders AddFriendButton snapshot 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hitSlop={undefined}
  isTVSelectable={true}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": null,
      "borderBottomWidth": null,
      "borderColor": "#007aff",
      "borderLeftWidth": null,
      "borderRadius": 5,
      "borderRightWidth": null,
      "borderTopWidth": null,
      "elevation": 0,
      "flexDirection": "column",
      "height": null,
      "justifyContent": "space-between",
      "opacity": 1,
      "paddingBottom": 6,
      "paddingLeft": 16,
      "paddingRight": 16,
      "paddingTop": 6,
      "shadowColor": null,
      "shadowOffset": null,
      "shadowOpacity": null,
      "shadowRadius": null,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <Text
    accessible={true}
    allowFontScaling={false}
    android="md-person-add"
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "#FFF",
          "fontSize": 12,
        },
        Object {
          "color": "#f4f4f4",
          "fontSize": 24,
          "marginLeft": 5,
          "marginRight": 5,
          "paddingTop": 2,
        },
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
      ]
    }
    virtual={undefined}
  >
    Ôá†
  </Text>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "color": "#f4f4f4",
        "fontFamily": "System",
        "fontSize": 16.5,
        "lineHeight": 19,
        "marginLeft": 0,
        "marginRight": 0,
      }
    }
    virtual={undefined}
  >
    Add Friend
  </Text>
</View>
`;

exports[`renders LogoutButton snapshot 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hitSlop={undefined}
  isTVSelectable={true}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": null,
      "borderBottomWidth": null,
      "borderColor": "#007aff",
      "borderLeftWidth": null,
      "borderRadius": 5,
      "borderRightWidth": null,
      "borderTopWidth": null,
      "elevation": 0,
      "flexDirection": "column",
      "height": null,
      "justifyContent": "space-between",
      "opacity": 1,
      "paddingBottom": 6,
      "paddingLeft": 16,
      "paddingRight": 16,
      "paddingTop": 6,
      "shadowColor": null,
      "shadowOffset": null,
      "shadowOpacity": null,
      "shadowRadius": null,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <Text
    accessible={true}
    allowFontScaling={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "#FFF",
          "fontSize": 12,
        },
        Object {
          "color": "#f4f4f4",
          "fontSize": 24,
          "marginLeft": 5,
          "marginRight": 5,
          "paddingTop": 2,
        },
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
      ]
    }
    virtual={undefined}
  >
    ÔáÆ
  </Text>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "color": "#f4f4f4",
        "fontFamily": "System",
        "fontSize": 16.5,
        "lineHeight": 19,
        "marginLeft": 0,
        "marginRight": 0,
      }
    }
    virtual={undefined}
  >
    Logout
  </Text>
</View>
`;

exports[`renders UserListButton snapshot 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hitSlop={undefined}
  isTVSelectable={true}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": null,
      "borderBottomWidth": null,
      "borderColor": "#007aff",
      "borderLeftWidth": null,
      "borderRadius": 5,
      "borderRightWidth": null,
      "borderTopWidth": null,
      "elevation": 0,
      "flexDirection": "column",
      "height": null,
      "justifyContent": "space-between",
      "opacity": 1,
      "paddingBottom": 6,
      "paddingLeft": 16,
      "paddingRight": 16,
      "paddingTop": 6,
      "shadowColor": null,
      "shadowOffset": null,
      "shadowOpacity": null,
      "shadowRadius": null,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <Text
    accessible={true}
    allowFontScaling={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "#FFF",
          "fontSize": 12,
        },
        Object {
          "color": "#f4f4f4",
          "fontSize": 24,
          "marginLeft": 5,
          "marginRight": 5,
          "paddingTop": 2,
        },
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
      ]
    }
    virtual={undefined}
  >
    ÔëΩ
  </Text>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "color": "#f4f4f4",
        "fontFamily": "System",
        "fontSize": 16.5,
        "lineHeight": 19,
        "marginLeft": 0,
        "marginRight": 0,
      }
    }
    virtual={undefined}
  >
    Friend List
  </Text>
</View>
`;

exports[`renders with snapshot 1`] = `<client />`;
